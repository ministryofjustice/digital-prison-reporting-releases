setup: true
version: 2.1
orbs:
  continuation: circleci/continuation@0.2.0
  path-filtering: circleci/path-filtering@1.0.0

workflows:
  setup:
    jobs:
      - clone
      - continuation/continue:
          configuration_path: ".circleci/main.yml"
          parameters: /home/circleci/params.json
          pre-steps:
            - attach_workspace:
                at: .
            - run:
                name: Generate params.json from project.yml
                command: |
                  if [ -z "${CIRCLE_PULL_REQUEST##*/}" ]; then
                    IS_PR=false
                  else
                    IS_PR=true
                  fi

                  function evaluate_release {
                    local ENVIRONMENT="$1"
                    echo "INFO: Evaluating release for environment: $ENVIRONMENT"

                    if [ "$IS_PR" = true ]; then
                      git_range="origin/main...$CIRCLE_SHA1"
                    else
                      git_range="origin/main..HEAD~1"
                    fi

                    release_file=$(git diff --name-only "$git_range" | grep -E '^'"$ENVIRONMENT"'/.*\.yml' | head -n1)
                    changed_project=$(basename "$release_file" .yml)

                    if [ -z "$changed_project" ]; then
                      echo "ERROR: Could not infer project from changes in $ENVIRONMENT/"
                      jq -n --argjson is_pr "$IS_PR" '{"is_pr": $is_pr, "skip": true}' > /home/circleci/params.json
                      return 1
                    fi

                    echo "Detected release file: $release_file"
                    echo "Inferred project key: $changed_project"

                    project_file="$ENVIRONMENT/$changed_project.yml"
                    if [ ! -f "$project_file" ]; then
                      echo "ERROR: Expected file $project_file not found"
                      jq -n --argjson is_pr "$IS_PR" '{"is_pr": $is_pr, "skip": true}' > /home/circleci/params.json
                      return 1
                    fi

                    EXECUTOR=$(yq e '.release.executor.name' "$project_file")
                    TAG=$(yq e '.release.executor.tag' "$project_file")
                    PROJECT_KEY=$(yq e '.release.release_type' "$project_file")
                    SYNC_FROM_YAML=$(yq e '.s3_sync_args.sync_artifacts // false' "$project_file")

                    if [[ "$PROJECT_KEY" == "terraform" ]]; then
                      SYNC_ARTIFACTS=true
                    else
                      SYNC_ARTIFACTS="$SYNC_FROM_YAML"
                    fi

                    echo "Executor: $EXECUTOR"
                    echo "Tag: $TAG"
                    echo "Project: $PROJECT_KEY"
                    echo "Sync Artifacts: $SYNC_ARTIFACTS"

                    jq -n \
                      --argjson is_pr "$IS_PR" \
                      --argjson is_release "$2" \
                      --arg project_key "$PROJECT_KEY" \
                      --arg executor "$EXECUTOR" \
                      --arg tag "$TAG" \
                      --argjson sync_artifacts "$SYNC_ARTIFACTS" \
                      '{
                        is_pr: $is_pr,
                        is_release: $is_release,
                        project_key: $project_key,
                        executor: $executor,
                        tag: $tag,
                        sync_artifacts: $sync_artifacts
                      }' > /home/circleci/params.json
                  }

                  if [ "$IS_PR" = true ]; then
                    is_prod_release=$(git diff --name-only origin/main...$CIRCLE_SHA1 prod/*.yml | wc -l)
                    is_preprod_release=$(git diff --name-only origin/main...$CIRCLE_SHA1 preprod/*.yml | wc -l)
                  else
                    is_prod_release=$(git diff --name-only origin/main..HEAD~1 prod/*.yml | wc -l)
                    is_preprod_release=$(git diff --name-only origin/main..HEAD~1 preprod/*.yml | wc -l)
                  fi

                  echo "is_prod_release=$is_prod_release, is_preprod_release=$is_preprod_release"

                  if [ "$is_prod_release" = 1 ] && [ "$is_preprod_release" = 1 ]; then
                    echo "ERROR: Both prod and preprod changes detected. Cannot proceed."
                    jq -n --argjson is_pr "$IS_PR" '{"is_pr": $is_pr, "skip": true}' > /home/circleci/params.json
                    exit 1
                  elif [ "$is_prod_release" = 1 ]; then
                    evaluate_release prod true
                  elif [ "$is_preprod_release" = 1 ]; then
                    evaluate_release preprod false
                  else
                    echo "No release changes detected."
                    jq -n --argjson is_pr "$IS_PR" '{"is_pr": $is_pr, "skip": true}' > /home/circleci/params.json
                  fi

                  echo "Generated params.json:"
                  cat /home/circleci/params.json
          requires: [clone]

jobs:
  clone:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Install yq and jq
          command: |
            YQ_VERSION=v4.35.2
            mkdir -p ~/bin
            curl -L "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64" -o ~/bin/yq
            chmod +x ~/bin/yq
            sudo apt-get update && sudo apt-get install -y jq
            echo 'export PATH=~/bin:$PATH' >> "$BASH_ENV"
            source "$BASH_ENV"
            yq --version
            jq --version
      - persist_to_workspace:
          root: .
          paths:
            - .
