setup: true
version: 2.1
orbs:
  continuation: circleci/continuation@0.2.0
  path-filtering: circleci/path-filtering@1.0.0

workflows:
  setup:
    jobs: 
      - clone    
      - continuation/continue:
          configuration_path: ".circleci/main.yml"
          parameters: /home/circleci/params.json
          pre-steps:
            - attach_workspace:
                at: .    
            - run:
                name: Evaluate release type and executor tag
                command: |
                  apt-get update && apt-get install -y yq

                  if [ -z "${CIRCLE_PULL_REQUEST##*/}" ]; then
                    IS_PR=false
                  else
                    IS_PR=true
                  fi

                  echo '{ "is_pr": '$IS_PR', "projects": [' > /home/circleci/params.json

                  if [ ${IS_PR} = true ]; then
                    is_prod_release=$(git diff --name-only origin/main...$CIRCLE_SHA1 'prod/*.yml' | wc -l)
                    is_preprod_release=$(git diff --name-only origin/main...$CIRCLE_SHA1 'preprod/*.yml' | wc -l)
                  else
                    is_prod_release=$(git diff --name-only origin/main..HEAD~1 'prod/*.yml' | wc -l)
                    is_preprod_release=$(git diff --name-only origin/main..HEAD~1 'preprod/*.yml' | wc -l)
                  fi

                  if [ "$is_preprod_release" = 1 ] && [ "$is_prod_release" = 1 ]; then
                    echo "Error: Cannot perform Release and Preprod deployment at the same time."
                    echo '], "skip": true }' >> /home/circleci/params.json
                    exit 1

                  elif [ "$is_preprod_release" = 0 ] && [ "$is_prod_release" = 0 ]; then
                    echo "WARN: Cannot determine release target. No config file changed in prod/ or preprod/"
                    echo '], "skip": true }' >> /home/circleci/params.json
                    exit 0

                  else
                    if [ "$is_prod_release" = 1 ]; then
                      echo "INFO: This is a Production Release"
                      is_release=true
                      ENV=prod
                    else
                      echo "INFO: This is a Pre-Production Deployment"
                      is_release=false
                      ENV=preprod
                    fi
                  fi

                  FIRST=true

                  for f in $(git diff --name-only origin/main...$CIRCLE_SHA1 "$ENV/*.yml"); do
                    if [ -f "$f" ]; then
                      EXECUTOR_NAME=$(yq e '.release.executor.name' "$f")
                      JAVA_TAG=$(yq e '.release.executor.tag' "$f" | sed 's/^v//')
                      PROJECT_KEY=$(yq e '.release.release_type' "$f")
                      PROJECT_NAME=$(basename "$f" .yml)

                      if [ "$EXECUTOR_NAME" != "null" ] && [ "$JAVA_TAG" != "null" ]; then
                        echo "INFO: Found executor info for $PROJECT_NAME: $EXECUTOR_NAME:$JAVA_TAG"
                        if [ "$FIRST" = true ]; then
                          FIRST=false
                        else
                          echo ',' >> /home/circleci/params.json
                        fi
                        echo '{ "project": "'$PROJECT_NAME'", "executor": "'$EXECUTOR_NAME'", "tag": "'$JAVA_TAG'", "is_release": '$is_release', "project_key": "'$PROJECT_KEY'" }' >> /home/circleci/params.json
                      fi
                    fi
                  done

                  echo '] }' >> /home/circleci/params.json
                  cat /home/circleci/params.json
          requires: [clone]        

jobs:
  clone:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
